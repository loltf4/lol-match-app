{"version":3,"sources":["components/navbar.jsx","components/match.jsx","components/matchhistory.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","name","handleSubmit","_callee","e","regenerator_default","a","wrap","_context","prev","next","preventDefault","_this","props","onSearch","stop","this","_this2","react_default","createElement","Fragment","className","src","window","location","origin","playerIcon","style","width","height","alt","playerName","onSubmit","type","placeholder","aria-label","maxLength","value","onChange","setState","target","onClick","select","Component","Match","handleBadge","outcome","handleBorder","handleSpell","_this$props","duration","champPhoto","champName","kda","kdaRatio","level","cs","csRatio","concat","MatchHistory","matches","map","match","components_match","key","id","summonerSpell1","summonerSpell2","summonerRunes","purchases","puchases","App","handleSearch","response","account","mins","secs","selectedChamp","champIco","matchResult","kdaScore","lvl","i","j","length","fetch","method","headers","Content-Type","body","JSON","stringify","post","sent","t0","text","t1","parse","call","profileIconId","ttlMatches","Math","floor","gameDuration","round","t2","keys","participantIdentities","t3","done","player","summonerName","console","log","summonerSpells","data","participants","championId","stats","kills","deaths","assists","toFixed","champLevel","totalMinionsKilled","neutralMinionsKilledEnemyJungle","neutralMinionsKilledTeamJungle","win","abrupt","summSpell1","summSpell2","Object","toConsumableArray","navbar","matchhistory","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2686f35a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  state = { name: \"\" };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    this.props.onSearch(this.state.name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n          <div>\r\n            <img\r\n              src={window.location.origin + this.props.playerIcon}\r\n              className=\"rounded mr-1\"\r\n              style={{ width: 50, height: 50 }}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"navbar-brand\">{this.props.playerName}</div>\r\n          </div>\r\n          <form className=\"form-inline\" onSubmit={this.handleSubmit}>\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Summoner Name\"\r\n              aria-label=\"Search\"\r\n              //Summoner names max at 16\r\n              maxLength=\"16\"\r\n              value={this.state.name}\r\n              //updates currently typed name when anything is entered\r\n              onChange={e => this.setState({ name: e.target.value })}\r\n              //highlights/selects the text when clicked\r\n              onClick={e => e.target.select()}\r\n            />\r\n            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Match extends Component {\r\n  handleBadge = () => {\r\n    let classes = this.props.outcome === \"Victory\" ? \"info\" : \"danger\";\r\n    return classes;\r\n  };\r\n\r\n  handleBorder = () => {\r\n    let classes = this.props.outcome === \"Victory\" ? \"primary\" : \"warning\";\r\n    return classes;\r\n  };\r\n\r\n  handleSpell = () => {\r\n    return \"Flash\";\r\n  };\r\n\r\n  //summonerSpells,\r\n  //summonerRunes,\r\n  //purchases,\r\n  render() {\r\n    const {\r\n      outcome,\r\n      duration,\r\n      champPhoto,\r\n      champName,\r\n      kda,\r\n      kdaRatio,\r\n      level,\r\n      cs,\r\n      csRatio\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className={`badge badge-${this.handleBadge()} d-block border border-${this.handleBorder()} align-middle`}\r\n        >\r\n          <div className=\"d-flex flex-row\">\r\n            <img\r\n              src={window.location.origin + champPhoto}\r\n              alt=\"\"\r\n              className={`rounded-circle m-2 border border-${this.handleBorder()}`}\r\n              style={{ height: 100, width: 100 }}\r\n            />\r\n            <div>\r\n              <div className=\"m-2\">{champName}</div>\r\n              <div className=\"m-2\">\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    `/assets/8.24.1/img/spell/Summoner${this.handleSpell()}.png`\r\n                  }\r\n                  alt=\"\"\r\n                  className={`rounded m-1 border border-${this.handleBorder()}`}\r\n                  style={{ height: 30, width: 30 }}\r\n                />\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    `/assets/8.24.1/img/spell/Summoner${this.handleSpell()}.png`\r\n                  }\r\n                  alt=\"\"\r\n                  className={`rounded m-1 border border-${this.handleBorder()}`}\r\n                  style={{ height: 30, width: 30 }}\r\n                />\r\n              </div>\r\n              <div className={`rounded bg-${this.handleBorder()}`}>\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    \"/assets/img/perk-images/Styles/Domination/Electrocute/Electrocute.png\"\r\n                  }\r\n                  alt=\"\"\r\n                  className=\"rounded m-1 bg-dark\"\r\n                  style={{ height: 30, width: 30 }}\r\n                />\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    \"/assets/img/perk-images/Styles/7202_Sorcery.png\"\r\n                  }\r\n                  alt=\"\"\r\n                  className=\"rounded m-1 bg-dark\"\r\n                  style={{ height: 30, width: 30 }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex flex-column\">\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"mt-4 mb-2 ml-2\">{kda}</div>\r\n                <div className=\"mt-4 mb-2 ml-1 font-weight-normal\">\r\n                  {`${kdaRatio} KDA`}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"mt-2 mb-2 ml-2\">{cs}</div>\r\n                <div className=\"mt-2 mb-2 ml-1 font-weight-normal\">{`${csRatio} CS`}</div>\r\n              </div>\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"mt-2 mb-2 ml-2\">{level}</div>\r\n                <div className=\"mt-2 mb-2 ml-1 font-weight-normal\">Level</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex flex-column\">\r\n              <div className=\"mt-1 mb-3 ml-2 mr-2\">{outcome}</div>\r\n              <div className=\"m-2\">{duration}</div>\r\n            </div>\r\n          </div>\r\n        </span>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Match;\r\n","import React, { Component } from \"react\";\r\nimport Match from \"./match\";\r\n\r\nclass MatchHistory extends Component {\r\n  render() {\r\n    const { matches } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {matches.map(match => (\r\n          <Match\r\n            key={match.id}\r\n            outcome={match.outcome}\r\n            duration={match.duration}\r\n            summonerSpell1={match.summonerSpell1}\r\n            summonerSpell2={match.summonerSpell2}\r\n            summonerRunes={match.summonerRunes}\r\n            champPhoto={match.champPhoto}\r\n            champName={match.champName}\r\n            kda={match.kda}\r\n            kdaRatio={match.kdaRatio}\r\n            purchases={match.puchases}\r\n            level={match.level}\r\n            cs={match.cs}\r\n            csRatio={match.csRatio}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MatchHistory;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport MatchHistory from \"./components/matchhistory\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    playerIcon: \"/assets/lolMatchApp.png\",\r\n    playerName: \"\",\r\n    matches: []\r\n  };\r\n\r\n  handleSearch = async playerName => {\r\n    let playerIcon = \"/assets/lolMatchApp.png\";\r\n    let matches = [];\r\n    //IF the searched name is between the 3-16 limit (max limit enforced my input)\r\n    if (playerName.length > 2) {\r\n      //Post to server the entered playername\r\n      const response = await fetch(\"/summoner\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ post: playerName })\r\n      });\r\n      //save the servers json response from kayn\r\n      const account = JSON.parse(await response.text());\r\n      this.setState({ playerName: account.name });\r\n      playerIcon = `/assets/8.24.1/img/profileicon/${\r\n        account.profileIconId\r\n      }.png`;\r\n\r\n      let mins,\r\n        secs,\r\n        selectedChamp,\r\n        champIco,\r\n        matchResult,\r\n        kdaScore,\r\n        kdaRatio,\r\n        lvl,\r\n        cs,\r\n        csRatio,\r\n        summSpell1,\r\n        summSpell2;\r\n      //const summSpells = [];\r\n      //Loop through all the matches latest matches we found\r\n      for (let i = 0; i < account.ttlMatches; i += 1) {\r\n        //converts time from seconds to mins and seconds to display as ingame\r\n        mins = Math.floor(account[i].gameDuration / 60);\r\n        secs = Math.round(account[i].gameDuration % 60);\r\n        //Loop through all the players in the ith match (allows for special maps like twisted treeline)\r\n        for (let j in account[i].participantIdentities) {\r\n          //IF we have found the searched for player\r\n          if (\r\n            account[i].participantIdentities[j].player.summonerName ===\r\n            account.name\r\n          ) {\r\n            //Summoner spells WANTED to put these into 1 variable with an array but... time restrictions\r\n            //let spell1 = account[i].participants[j].spell1Id;\r\n            //let spell2 = account[i].participants[j].spell2Id;\r\n            //summSpell1 = account.summonerSpells.data.key[spell1];\r\n            console.log(account.summonerSpells.data);\r\n            //Champions name\r\n            selectedChamp =\r\n              account.data[account[i].participants[j].championId].name;\r\n            //Champions icon (some names have spaces which are removed for image names)\r\n            champIco = account.data[account[i].participants[j].championId].key;\r\n            //KDA for the selected player\r\n            kdaScore = `${account[i].participants[j].stats.kills}/${\r\n              account[i].participants[j].stats.deaths\r\n            }/${account[i].participants[j].stats.assists}`;\r\n            //Calculates KDA ratio\r\n            kdaRatio = (\r\n              (account[i].participants[j].stats.kills +\r\n                account[i].participants[j].stats.assists) /\r\n              account[i].participants[j].stats.deaths\r\n            ).toFixed(2);\r\n            //Champions level for selected player\r\n            lvl = account[i].participants[j].stats.champLevel;\r\n            //Last hits for the selected player and a ratio of lh vs time\r\n            cs =\r\n              account[i].participants[j].stats.totalMinionsKilled +\r\n              account[i].participants[j].stats.neutralMinionsKilledEnemyJungle +\r\n              account[i].participants[j].stats.neutralMinionsKilledTeamJungle;\r\n            //\r\n            csRatio = (cs / (mins + secs / 60)).toFixed(2);\r\n            //IF the player won the game or not\r\n            matchResult = account[i].participants[j].stats.win\r\n              ? \"Victory\"\r\n              : \"Defeat\";\r\n            break;\r\n          }\r\n        }\r\n        //creates an instance of a given match, sets the newely found information and concats it\r\n        const match = {\r\n          id: i,\r\n          outcome: matchResult,\r\n          duration: `${mins}m ${secs}s`,\r\n          summonerSpell1: summSpell1,\r\n          summonerSpell2: summSpell2,\r\n          champPhoto: `/assets/8.24.1/img/champion/${champIco}.png`,\r\n          champName: selectedChamp,\r\n          kda: kdaScore,\r\n          kdaRatio: kdaRatio,\r\n          level: lvl,\r\n          cs: cs,\r\n          csRatio: csRatio\r\n        };\r\n        //builds up the list of matches so that matchhistory can map it\r\n        matches = [...matches, match];\r\n      }\r\n    } else {\r\n      //invalid name entered (0-2 characters) [may make search stricter]\r\n      this.setState({ playerName: \"\" });\r\n    }\r\n    this.setState({ playerIcon });\r\n    this.setState({ matches });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar\r\n          onSearch={this.handleSearch}\r\n          playerName={this.state.playerName}\r\n          playerIcon={this.state.playerIcon}\r\n        />\r\n        <MatchHistory matches={this.state.matches} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}